h1. *Advanced*
______________________________________________________________________


This documentation concerns the advanced configuration of POPStarter r13, involving the harcoding (or the patch-on-load) of settings to the POPStarter ELF/KELF...

The POPStarter r13 ELF and KELF have a 32 bytes long configuration table, starting from the offset $410 (or 1040 in decimal).

Unless you know exactly what it is for and what you're doing, please don't tamper with it. Perhaps a GUI or a bunch of PPFs will surface, but for now the hexediting of that stuff is for advanced users only... Make a backup of the default config before you start changing values
_____________________________________________________________________________________________________________

*Offset $410 : Display of the debug texts/pages*
* A value of 0x00 disables the debug printing.
* A value between 0x01 and 0x0FF defines the delay between each page of texts. The higher the value is, the longer the delay is.
* When set to 0xFF, the debug texts are displayed in realtime without delay (like in POPStarter 12 and lower)
_____________________________________________________________________________________________________________

*Offset $411 : Break the POPStarter execution after an error has occured*
* When set to 0x00, POPStarter prints the error message for a short time, then it kicks the user to the OSD.
* When set to anything but 0x00, POPStarter prints the error message and sleeps on that screen indefinitely 
_____________________________________________________________________________________________________________

*Offset $412 : Skip most POPStarter functions (NOT FULLY IMPLEMENTED)*
* 0x00 == OFF
* 0x01 == Level 1
* 0x02 == Level 2
* Note  : That feature is not finished, I don't even know how it behaves atm. Use at your own risk.
_____________________________________________________________________________________________________________

*Offset $413 : USB access delay, after the execution of the POPStarter embedded USB modules*
* 0x02 should be fine. Increase the value if POPStarter fails to access your USB device
_____________________________________________________________________________________________________________

*Offset $414 : RESERVED (in USB operation mode)*
* Must be 0x40
_____________________________________________________________________________________________________________

*Offset $415 : User ID for individual VMCs*
* If set to 0x00, the function is disabled.
*  For assigning an ID to the couple of VMC, the value must be an ASCII character of "0", "1", "2", "3", "4", "5", "6", "7", "8" or "9"
_____________________________________________________________________________________________________________

*Offset $416 : POPS dev9 module loading (in USB operation mode)*


| *Offset* | *Description* | *Values* | *Notes* |
| *$429* | Virtual Memory Cards control | 0x00 = Use both VMCs |
|   |   | 0x01 = Don't use VMCs at all |   |
|   |   | 0x02 = Use just the first VMC in the first virtual slot |   |
| *$42A* | Automatic PAL patch upon European VCD recognition | 0x00 = Disabled | The Automatic PAL Patcher of POPStarter expects "Euro" at the offset $102514 of the VCD |
|   |   | 0x01 = Enabled |   |
| *$42B* | Resident modules loader | 0x00 = Disabled | POPS/MODULE_0.IRX POPS/MODULE_1.IRX... up to POPS/MODULE_9.IRX. Are executed AFTER the IOP gets reset with IOPRP252.IMG, for Great Justice. |
|   |   | 0x01 = Enabled |   |
| *$42C* | Software PowerOff fix | 0x00 = Disabled | Can't remember what it is. Perhaps it's a redundant option of a deimplemented function... Prolific, mass ? |
|   |   | 0x01 = Enabled |   |
| *$42D* | IGR textures loader | 0x00 = Disabled | POPS/IGR_BG.TM2 POPS/IGR_NO.TM2 POPS/IGR_YES.TM2 |
|   |   | 0x01 = Enabled |   |
| *$42E* | Game license/region check of the POPS built-in BIOS| 0x00 = Leave unpatched | The patch just NOPs the loop. The PS logo is not shown when a non-JAP game is run. |
|   |   | 0x01 = Patch it so it does not loop the check when the VCD isn't NTSC J |   |
| *$42F* | POPStarter automatic compatibility mode activator | 0x00 = Do not enable anything | If set to 0x03 and a compatibility mode is forced, it will be changed to 0x02 automatically (applies the forced modes and not the automatic ones) |
|   |   | 0x01 = Enable the automatic compatibility modes activation |   |
|   |   | 0x02 = Enable the other subroutines (like LibCrypt cracks, when available) |   |
|   |   | 0x03 = Enable all |   |
